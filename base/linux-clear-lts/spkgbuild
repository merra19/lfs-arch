# description	: Linux Kernel
# depends	: dracut linux-firmware openssl cpio bc terminus-font 
# depends	: noto-fonts ttf-linux-libertine elfutils

pkgname=linux-clear-lts
pkgver=6.12.25
pkgrel=1
options="!strip"
source="https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-${pkgver%.0}.tar.xz
        0050-Revert-ext4-do-not-create-EA-inode-under-buffer-lock.patch
        0101-i8042-decrease-debug-message-level-to-info.patch
        0102-increase-the-ext4-default-commit-age.patch
        0104-pci-pme-wakeups.patch
        0106-intel_idle-tweak-cpuidle-cstates.patch
        0108-smpboot-reuse-timer-calibration.patch
        0111-ipv4-tcp-allow-the-memory-tuning-for-tcp-to-go-a-lit.patch
        0112-init-wait-for-partition-and-retry-scan.patch

        0114-add-boot-option-to-allow-unsigned-modules.patch
        0115-enable-stateless-firmware-loading.patch
        0116-migrate-some-systemd-defaults-to-the-kernel-defaults.patch
        0117-xattr-allow-setting-user.-attributes-on-symlinks-by-.patch
        0120-do-accept-in-LIFO-order-for-cache-efficiency.patch
        0121-locking-rwsem-spin-faster.patch
        0122-ata-libahci-ignore-staggered-spin-up.patch
        0123-print-CPU-that-faults.patch
        0126-don-t-report-an-error-if-PowerClamp-run-on-other-CPU.patch
        0127-lib-raid6-add-patch.patch
        0128-itmt_epb-use-epb-to-scale-itmt.patch
        0130-itmt2-ADL-fixes.patch
        0131-add-a-per-cpu-minimum-high-watermark-an-tune-batch-s.patch
        0133-novector.patch
        0134-md-raid6-algorithms-scale-test-duration-for-speedier.patch
        0135-initcall-only-print-non-zero-initcall-debug-to-speed.patch
        libsgrowdown.patch

        epp-retune.patch
        0136-crypto-kdf-make-the-module-init-call-a-late-init-cal.patch
        ratelimit-sched-yield.patch
        scale-net-alloc.patch
        0158-clocksource-only-perform-extended-clocksource-checks.patch
        better_idle_balance.patch
        0161-ACPI-align-slab-buffers-for-improved-memory-performa.patch
        0163-thermal-intel-powerclamp-check-MWAIT-first-use-pr_wa.patch
        0164-KVM-VMX-make-vmx-init-a-late-init-call-to-get-to-ini.patch
        slack.patch
        0166-sched-fair-remove-upper-limit-on-cpu-number.patch
        0167-net-sock-increase-default-number-of-_SK_MEM_PACKETS-.patch
        configarch"

_srcname=linux-$pkgver

export KBUILD_BUILD_HOST=linux
export KBUILD_BUILD_USER=$pkgname
export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

prepare() {
    cd linux-${pkgver%.0}

    for i in $source;do
        case $i in
            *.patch) patch -Np1 -i ../$i
        esac
    done

    echo "Setting version..."
    echo "-$pkgrel" > localversion.10-pkgrel
    echo "${pkgname#linux}" > localversion.20-pkgname

    cp ../configarch .config

	sed '/^CONFIG_LOCALVERSION=/d' -i .config
	echo 'CONFIG_LOCALVERSION="-LFS"' >> .config

    sed "s/-march=westmere/-march=$MMARCH/g" -i arch/x86/Makefile

    yes "" | make oldconfig

    make -s kernelrelease > version
    echo "Prepared $pkgname version $(<version)"
}

build() {
    cd linux-${pkgver%.0}

    make all
    #make -C tools/bpf/bpftool vmlinux.h feature-clang-bpf-co-re=1
}

package() {
    cd $_srcname

    local modulesdir="$pkgdir/usr/lib/modules/$(<version)"

    echo "Installing boot image..."
    # systemd expects to find the kernel here to allow hibernation
    # https://github.com/systemd/systemd/commit/edda44605f06a41fb86b7ab8128dcf99161d2344
    install -Dm644 "$(make -s image_name)" "$modulesdir/vmlinuz"

    # Used by mkinitcpio to name the kernel
    echo "$pkgname" | install -Dm644 /dev/stdin "$modulesdir/pkgbase"

    echo "Installing modules..."
    ZSTD_CLEVEL=19 make INSTALL_MOD_PATH="$pkgdir/usr" INSTALL_MOD_STRIP=1 \
        DEPMOD=/doesnt/exist modules_install  # Suppress depmod

    # remove build link
    rm "$modulesdir"/build

    local builddir="$pkgdir/usr/lib/modules/$(<version)/build"

    echo "Installing build files..."
    install -Dt "$builddir" -m644 .config Makefile Module.symvers System.map \
        localversion.* version vmlinux # tools/bpf/bpftool/vmlinux.h
    install -Dt "$builddir/kernel" -m644 kernel/Makefile
    install -Dt "$builddir/arch/x86" -m644 arch/x86/Makefile
    cp -t "$builddir" -a scripts
    ln -srt "$builddir" "$builddir/scripts/gdb/vmlinux-gdb.py"

    # required when STACK_VALIDATION is enabled
    install -Dt "$builddir/tools/objtool" tools/objtool/objtool

    # required when DEBUG_INFO_BTF_MODULES is enabled
    #install -Dt "$builddir/tools/bpf/resolve_btfids" tools/bpf/resolve_btfids/resolve_btfids

    echo "Installing headers..."
    cp -t "$builddir" -a include
    cp -t "$builddir/arch/x86" -a arch/x86/include
    install -Dt "$builddir/arch/x86/kernel" -m644 arch/x86/kernel/asm-offsets.s

    install -Dt "$builddir/drivers/md" -m644 drivers/md/*.h
    install -Dt "$builddir/net/mac80211" -m644 net/mac80211/*.h

    # https://bugs.archlinux.org/task/13146
    install -Dt "$builddir/drivers/media/i2c" -m644 drivers/media/i2c/msp3400-driver.h

    # https://bugs.archlinux.org/task/20402
    install -Dt "$builddir/drivers/media/usb/dvb-usb" -m644 drivers/media/usb/dvb-usb/*.h
    install -Dt "$builddir/drivers/media/dvb-frontends" -m644 drivers/media/dvb-frontends/*.h
    install -Dt "$builddir/drivers/media/tuners" -m644 drivers/media/tuners/*.h

    # https://bugs.archlinux.org/task/71392
    install -Dt "$builddir/drivers/iio/common/hid-sensors" -m644 drivers/iio/common/hid-sensors/*.h

    echo "Installing KConfig files..."
    find . -name 'Kconfig*' -exec install -Dm644 {} "$builddir/{}" \;

    echo "Removing unneeded architectures..."
    local arch
    for arch in "$builddir"/arch/*/; do
        [[ $arch = */x86/ ]] && continue
        echo "Removing $(basename "$arch")"
        rm -r "$arch"
    done

    echo "Removing documentation..."
    rm -r "$builddir/Documentation"

    echo "Removing broken symlinks..."
    find -L "$builddir" -type l -printf 'Removing %P\n' -delete

    echo "Removing loose objects..."
    find "$builddir" -type f -name '*.o' -printf 'Removing %P\n' -delete

    echo "Stripping build tools..."
    local file
    while read -rd '' file; do
        case "$(file -Sib "$file")" in
        application/x-sharedlib\;*)      # Libraries (.so)
            strip -v $STRIP_SHARED "$file" ;;
        application/x-archive\;*)        # Libraries (.a)
            strip -v $STRIP_STATIC "$file" ;;
        application/x-executable\;*)     # Binaries
            strip -v $STRIP_BINARIES "$file" ;;
        application/x-pie-executable\;*) # Relocatable binaries
            strip -v $STRIP_SHARED "$file" ;;
        esac
    done < <(find "$builddir" -type f -perm -u+x ! -name vmlinux -print0)

    echo "Stripping vmlinux..."
    strip -v $STRIP_STATIC "$builddir/vmlinux"

    echo "Adding symlink..."
    mkdir -p "$pkgdir/usr/src"
    ln -sr "$builddir" "$pkgdir/usr/src/$pkgname"
}
